#application.properties 是 springboot在运行中所需要的配置信息。
#application-dev.properties 文件配置，springboot会加载使用
#application.properties和application-dev.properties配置文件的信息
spring.profiles.active=dev
#-----------------------------------------------------------
#配置日志文件
#1）spring boot 默认会加载 classpath:logback-spring.xml 
#或者 classpath:logback-spring.groovy。
#2）spring boot 默认会加载 classpath:log4j2.xml 
#者 classpath:log4j2-spring.xml。
#若为默认路径，此处无需配置，此处使用的是logback
logging.config=classpath:logback-spring.xml
#-----------------------------------------------------------
#添加 Freemarker 模板配置
#spring.freemarker.allow-request-override=false
#spring.freemarker.cache=true
#spring.freemarker.check-template-location=true
#spring.freemarker.charset=UTF-8
#spring.freemarker.content-type=text/html
#spring.freemarker.expose-request-attributes=false
#spring.freemarker.expose-session-attributes=false
#spring.freemarker.expose-spring-macro-helpers=false
#spring.freemarker.prefix=
#spring.freemarker.suffix=.ftl
#上述配置都是默认值。
#-----------------------------------------------------------
# 添加 Thymeleaf 模板配\u5DE5
#spring.thymeleaf.cache=true
#spring.thymeleaf.prefix=classpath:/templates/
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.mode=HTML5
#spring.thymeleaf.encoding=UTF-8
#spring.thymeleaf.content-type=text/html
#上述配置都是默认值。
#-----------------------------------------------------------
#springmvc 不推荐jsp 未测试
#spring.mvc.view.prefix:/WEB-INF/jsp/
#spring.mvc.view.suffix:.jsp
#-----------------------------------------------------------
#http://www.cnblogs.com/magicalSam/p/7189476.html
#可以自定义静态资源映射
#静态资源放到以下路径
#（classpath:/META-INF/resources/,
#classpath:/resources/,
#classpath:/static/,
#classpath:/public/）或放到者我们把静态文件直接放到webapp下
#在浏览器输入指定地址时都是可以访问
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ 
#pring Boot 默认会挨个从 public resources static 里面找是否存在相应的资源，如果有则直接返回。
#-----------------------------------------------------------
#可以不指定 driver-class-name，因为 spring boot 会自动识别 url。
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=asd123456
#-----------------------------------------------------------
# JPA 配置  配置自动建表：updata:没有表新建，有表更新操作,控制台显示建表语句
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
#-----------------------------------------------------------
# 方式一需在这里配置mybatis 配置
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#-----------------------------------------------------------
# 第一种Druid，在这里配置数据源 Druid 修改数据源 
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.initial-size=5
#spring.datasource.druid.min-idle=5
#spring.datasource.druid.max-active=20
#spring.datasource.druid.max-wait=60000
#spring.datasource.druid.time-between-eviction-runs-millis=60000
#spring.datasource.druid.min-evictable-idle-time-millis=300000
#spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
#spring.datasource.druid.test-while-idle=true
#spring.datasource.druid.test-on-borrow=false
#spring.datasource.druid.test-on-return=false
#spring.datasource.druid.pool-prepared-statements=true
#spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.filters=stat,wall,log4j
#-----------------------------------------------------------
#第二种Druid 配置
spring.datasource.druid.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.url=jdbc:mysql://localhost:3306/springboot?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
spring.datasource.druid.username=root
spring.datasource.druid.password=root
spring.datasource.druid.initialSize=5
spring.datasource.druid.minIdle=5
spring.datasource.druid.maxActive=20
spring.datasource.druid.maxWait=60000
spring.datasource.druid.timeBetweenEvictionRunsMillis=60000
spring.datasource.druid.min-evictableIdleTimeMillis=300000
spring.datasource.druid.validationQuery=SELECT 1 FROM DUAL
spring.datasource.druid.testWhileIdle=true
spring.datasource.druid.testOnBorrow=false
spring.datasource.druid.testOnReturn=false
spring.datasource.druid.poolPreparedStatements=true
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.druid.filters=stat,wall
#注意：配置中都是以 spring.datasource.druid 开头，使用驼峰命名
#-----------------------------------------------------------
#默认情况下，Druid 的监控统计功能和页面是开启的。(我这里不能访问，我用的第二种方式，可能第一种方式可以访问)
## druid 监控   http://localhost:8080/druid/index.html
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
## druid 监控页面
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid123
#-----------------------------------------------------------
#${random}的配置方式主要有以下几种， 读者可作为参考使用。
#随机字符串
com.didispace.blog.value=${random.value}
#随机int
com.didispace.blog.number=${random.int}
#随机long
com.didispace.blog.bignumber=${random.long}
# 10以内的随机数
com.didispace.blog.tes七 1=${random.int(l0)}
# 10-20的随机数
com.didispace.blog.test2=${random.int[l0,20]} 