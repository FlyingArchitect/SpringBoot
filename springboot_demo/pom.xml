<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>js.springboot</groupId>
	<artifactId>springboot_demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<!-- 定义公共资源版本 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.6.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- 上边引入 parent，因此 下边无需指定版本 -->
		<!-- 包含 mvc,aop 等jar资源 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- 热部署 -->
		<!-- 当我们修改文件和创建文件时，都需要重新启动项目。这样频繁的操作很浪费时间， -->
		<!-- 配置热部署可以让项目自动加载变化的文件，省去的手动操作 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>true</scope>
		</dependency>
		<!-- 由于 jsp 不被 SpringBoot 推荐使用，所以模板引擎主要介绍 Freemarker 和 Thymeleaf。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<!-- 也是前端页面添加 Thymeleaf依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<!-- 整合 Fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.35</version>
		</dependency>
		<!-- AOP依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- 工具类，文件上传下载 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- 整合websocket -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>

		<!-- jdbc -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- mysql 驱动包 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!-- 整合 Spring-data-jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<!-- 整合 MyBatis 有两种方式： -->
		<!-- 1) 使用 mybatis 官方提供的 Spring Boot 整合包实现。 -->
		<!-- 2) 使用 mybatis-spring 整合的方式，也就是传统的方式（推荐，此方式容易控制 MyBatis 的配置）。 -->
		<!-- 第一种：springboot,mybatis 整合包 ，需在application.properties中配置，mybatis配置文件位置 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.0</version>
		</dependency>
		<!-- 第二种原始 Jar 包 + 手动编程，需编写@Configuration,配置 mybatis配置文件位置 -->
		<!-- mybatis -->
		<!-- <dependency> -->
		<!-- <groupId>org.mybatis</groupId> -->
		<!-- <artifactId>mybatis</artifactId> -->
		<!-- <version>3.4.4</version> -->
		<!-- </dependency> -->
		<!-- spring,mybatis整合包 -->
		<!-- <dependency> -->
		<!-- <groupId>org.mybatis</groupId> -->
		<!-- <artifactId>mybatis-spring</artifactId> -->
		<!-- <version>1.3.1</version> -->
		<!-- </dependency> -->

		<!-- 第一种：springboot,druid 整合包，需在application.properties中配置数据源 （此包不能使用。可能是版本问题） -->
		<!-- <dependency> -->
		<!-- <groupId>com.alibaba</groupId> -->
		<!-- <artifactId>druid-spring-boot-starter</artifactId> -->
		<!-- <version>1.1.8</version> -->
		<!-- </dependency> -->

	<!-- 第二种  需在application.properties中配置数据源 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.1.8</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!-- 没有该配置，devtools 不生效 -->
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>





</project>